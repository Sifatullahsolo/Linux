#Linux Command Cheat Sheet



📘 Help & Documentation - Master Linux by Knowing How to Ask

--- 🔍 Find Commands by Keyword ---
apropos keyword                  # Find commands related to keyword (search man pages)
apropos -a kw1 kw2               # Match ALL keywords (AND search)
apropos -e exactword             # Exact match only (no partial matches)

--- 🎯 Filter Search Results ---
apropos user | grep add          # Find "user" + filter lines containing "add"
apropos user | grep -i login     # Case-insensitive search for "login"
apropos user | grep -iE "add|create"  # Match multiple words (OR logic)

--- 📖 Know What a Command Does ---
whatis [command]                 # One-line description of the command
man [command]                    # Open manual page (q = quit, / = search)
man -k keyword                   # Same as apropos (search in man descriptions)
man -f command                   # Same as whatis

--- 📚 Advanced Manuals ---
info [command]                   # Read more detailed manual (navigate: space, q)
[command] --help                 # Show built-in help/options for the command
help [bash_builtin]             # Help for shell built-ins like cd, echo, etc.

--- 📍 Find the Command Itself ---
type [command]                   # See if it's alias, shell builtin, or file  
whereis [command]                Shows the path(s) of a command's binary, source, and manual files.
which [command]                  # Show full path of the command binary (from $PATH)  
command -V [command]             # Same as type, more detailed


alias                           To check the list of all alias
alias ll='ls -l'                # Creates a shortcut named 'll' that runs 'ls -l'  
unalias [command ]              To remove an existing alias




### Navigate the File System

cd                         # User home dir. Change directory. ( c = change, d= directory) 
cd /                       Go to root directory.
cd /home                   brings u to user home dir
cd ~                       Navigate to home directory for the user 
cd "reports"               Go to 'reports' subdirectory.
cd /home/analyst/reports   Go to full path directory.
cd -                       moves u to previous location / dir
cd ../../../               Goes back 3 parent folders from current location.
cd ..                      Go up one directory.
ls                         List files and directories.
ls /                       List content of root directory.
ls /path                   List files in given path.
ls -a                      Include hidden files.
ll                         Lists files with details (permissions, size, date).
ls -l                      Long format (permissions, size, etc.).
ls -la                     Long format + hidden files.
ls -d */                   Show only directories in current directory.
pwd                        Print current directory. ( p= print, w= work, d= director)
q                       exits the manual viewer (less).


ls -l                      Sorts files by name.
ls -lS                     Sorts by size (largest first).
ls -lSr                    Sorts by size (smallest first).
ls -X                      Sorts by extension.
ls | grep ".txt"           Lists all .txt files.



### Read Files
cat file             Show all content of file.
more [filename]      View file content screen by screen; space = next page, q = quit.
more -10 [filename]  to see only first 10 lines of file
more +100 [filename]  to see from 100th line 
more +100 -5 [filename]  Literal: Start showing file from line 100, display 5 lines at a time. 
more -5 +/Romeo [filName] #showing file from line containing "Romeo," display 5 lines at a time.
more -s [filename]   Shows file pages, replacing multiple blank lines with a single blank line.
head file            Show first 10 lines.
head -n 5 file       Show first 5 lines.
less file            Scrollable file viewer.
tail file            Show last 10 lines.
tail -n 5 file       Show last 5 lines.
echo "txt" > f.txt   Overwrite a file (clears old content).
echo "txt" >> f.txt  Append to a file.
cat > [file]         Overwrite file and lets you write new text.



### Manage File System
tree                    Shows folders and files in a directory as a tree layout.
cp file.txt /home/user/    #Copy file/directory.
cp [file or dir] [/directory]       # Copies file or directory to new location.
mkdir name              Make new directory.
mkdir [path] [directory name]  Create new directory in specified location.
mkdir 2/3/4 -p          creating nested folders.
-p                      mkdir -p /path/to/dir/   Creates parent directories if they don’t exist.
mv src dest             Move or rename file/directory.
mv [file name] [/directory]    Moves file/directory to new location.
mv [oldname] [newname]          Rename file/directory.
leafpad filename.txt         Simple text editor. Note

rm file                 Delete file.
rmdir dir               Delete empty directory.
touch file              Create empty file.
echo > newfile.txt      To create a new file
cat > newfile.txt       To create a new file ( it will ask u to write text, CTRL + D to exit. 
rm -r [dir]             Recursively delete directory and contents.
rm -rf [dir]            Force delete directory without prompts.
df -h                  # Shows disk space usage of all file systems in a human-readable format.









# 1. SOFT LINK (Symbolic Link - Like Shortcut)  

echo "Hello World" > original.txt          # Create a file  
ln -s original.txt soft_link.txt          # Create soft link  
ls -l soft_link.txt                       # Show link target (-> original.txt)  
cat soft_link.txt                         # Reads "Hello World"  
rm original.txt                           # Delete original  
cat soft_link.txt                         # ❌ Fails (broken link!)  

# 2. HARD LINK (Mirror Copy - Same Data)  

echo "Linux Links" > hard_original.txt     # Create another file  
ln hard_original.txt hard_link.txt        # Create hard link  
ls -i hard_original.txt hard_link.txt     # Check same inode (proof it's linked)  
cat hard_link.txt                         # Reads "Linux Links"  
rm hard_original.txt                      # Delete original  
cat hard_link.txt                         # ✅ Still works! (data preserved)  

# 3. DELETE LINKS  

unlink soft_link.txt                      # Delete soft link  
rm hard_link.txt                          # Delete hard link  

# =============================================  
# SUMMARY (What Happened?)  
# =============================================  
echo "  
Soft Link:  
- Command: ln -s ORIGINAL LINK  
- Breaks if original deleted.  
- Works for files/folders.  

Hard Link:  
- Command: ln ORIGINAL LINK  
- Survives if original deleted.  
- Works ONLY for files.  






pandoc --help 


wc --help

systemctl --help 
crontab --help












cron --help           A time-based job scheduler in Linux.
                      # Runs commands automatically at set times (e.g., every day at 3 AM).
###BASIC 
crontab -e          	Edit your cron jobs (tasks)
crontab -l	L         ist your scheduled jobs
crontab -r	          Delete ALL jobs (use with caution!)
sudo systemctl        restart cron	Restart cron service (if changes don’t apply)


###SYNTAX
* * * * * /path/to/command arg1 arg2
│ │ │ │ │
│ │ │ │ └── Day of week (0-7, 0=Sunday)  
│ │ │ └──── Month (1-12)  
│ │ └────── Day of month (1-31)  
│ └──────── Hour (0-23)  
└────────── Minute (0-59)  

Schedule	        Command
---------------------------------
Every minute	          * * * * * command
Every 5 mins	          */5 * * * * command
Daily at 3 AM	          0 3 * * * command
Every Sunday at 5 PM  	0 17 * * 0 command
On reboot	              @reboot command

HOW TO ADD CRON JOB
crontab -e              Open crontab

0 2 * * * /home/user/backup.sh >> /home/user/backup.log 2>&1    
# Add your job (e.g., run a backup script daily at 2 AM):
# Save & exit (Ctrl+X → Y in nano).


# 4. EXAMPLE: BACKUP SCRIPT
echo 'tar -czf ~/backup-$(date +\%F).tar.gz ~/Documents' > ~/backup.sh
chmod +x ~/backup.sh
crontab -e  # Add this line:
0 2 * * * /home/user/backup.sh >> ~/backup.log 2>&1  # Daily backup at 2 AM

# 5. DEBUGGING
# Check cron logs:
tail -f /var/log/syslog | grep cron
# View command output:
tail -f ~/backup.log

# 6. COMMON FIXES
# - Use FULL paths in scripts (/usr/bin/python3)
# - Make scripts executable (chmod +x script.sh)
# - Set environment variables in scripts:
echo 'export PATH=/usr/bin:/bin' >> ~/script.sh

# 7. DELETE JOBS
crontab -e  # Remove lines to delete jobs
# OR (DANGER! Deletes ALL jobs):
crontab -r

# =============================================
# TIPS:
# 1. Test commands manually first!
# 2. Log output with >> file.log 2>&1
# 3. Avoid ~ in paths - use /home/user instead
# =============================================















|  using pipe 

# 1. List files and filter for .txt files
ls -l | grep ".txt"          # Shows only .txt files in current directory

# 2. Count lines in a file
cat /etc/passwd | wc -l      # Counts number of user accounts

# 3. Find processes matching 'chrome' and count them
ps aux | grep "chrome" | wc -l  # Counts running Chrome processes

# 4. Sort files by size (largest last)
ls -lh | sort -k 5 -n       # Sorts files by 5th column (size) numerically

# 5. Monitor log updates in real-time
tail -f /var/log/syslog | grep "error"  # Shows live system errors

# 6. Get disk usage of a directory
du -sh /home | awk '{print $1}'  # Shows total size of /home in human-readable format

# 7. Extract unique IPs from a log
cat /var/log/auth.log | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" | sort | uniq  # Lists unique IPs in auth log

# 8. Check top 5 memory-consuming processes
ps aux --sort=-%mem | head -n 6  # Shows top 5 processes (header is line 1)

# 9. Find all readable files by user
find / -type f -readable 2>/dev/null | wc -l  # Counts readable files system-wide

# 10. Generate random password
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 12 | head -n 1  # Creates a 12-char random password




Using ||    double pipe 
# 1. Run second command ONLY if first fails
false || echo "First command failed, so I run!"

# 2. Try to open file OR show error
cat non_existent_file.txt || echo "File not found!"

# 3. Combine with && (AND)
mkdir new_dir && cd new_dir || echo "Failed to create/enter dir"

# 4. Set default value if command fails
config_file=$(find / -name "config.yml" 2>/dev/null) || config_file="./default.yml"
echo "Using config: $config_file"

# 5. Exit script on error
rm important.lock || { echo "Couldn't remove lock file!"; exit 1; }

# 6. Multiple fallbacks
which python3 || which python2 || echo "No Python found"






&& Double ampersand  AND 
# 1. Run second command ONLY if first succeeds
true && echo "First command succeeded, so I run!"

# 2. Make dir AND enter it (only if mkdir succeeds)
mkdir new_dir && cd new_dir

# 3. Chain multiple commands
touch file.txt && echo "Hello" > file.txt && cat file.txt

# 4. Check if file exists AND read it
[ -f /etc/hosts ] && cat /etc/hosts

# 5. Build code AND run if successful
make && ./my_program

# 6. Combine with || for error handling
rm old_file && echo "Deleted" || echo "Failed to delete"

# 7. Check connection AND fetch data
ping -c1 google.com &>/dev/null && curl google.com







mc --help 


purge --help 


dpkg --help                     # But Use apt for 99% of cases (safer/easier)


snap --help 












# # # Downloading a .deb file → 2. Installing it → 3. Verifying → 4. Cleanup

# =============================================
# 1. DOWNLOAD A PACKAGE (e.g., Google Chrome)
# =============================================
echo "Step 1: Downloading .deb file..."
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

# =============================================
# 2. INSTALL THE DOWNLOADED PACKAGE
# =============================================
echo -e "\nStep 2: Installing the package..."
sudo apt install ./google-chrome-stable_current_amd64.deb

# =============================================
# 3. VERIFY IT WORKED
# =============================================
echo -e "\nStep 3: Verifying installation..."
which google-chrome || echo "Installation failed!"

# =============================================
# 4. CLEANUP (OPTIONAL)
# =============================================
echo -e "\nStep 4: Cleaning up..."
rm google-chrome-stable_current_amd64.deb
echo "Done! Chrome is now installed."











apt --help
# 1. Update package lists (always do this first)
sudo apt update

# 2. Upgrade installed packages
sudo apt upgrade

# 3. Install a package
sudo apt install package_name

# 4. Remove a package (keeps config files)
sudo apt remove package_name

# 5. Completely remove package + configs
sudo apt purge package_name

# 6. Search for packages
apt search "search_term"

# 7. Show package info
apt show package_name

# 8. List installed packages
apt list --installed

# 9. Autoremove unused packages
sudo apt autoremove

# 10. Fix broken dependencies
sudo apt --fix-broken install

# 11. Clean up downloaded packages
sudo apt clean


# ## Always run sudo apt update first

Use apt instead of apt-get (newer, simpler)

Add -y to auto-confirm (e.g., sudo apt install -y package)

# Common Combinations:

# Update & upgrade in one line
sudo apt update && sudo apt upgrade -y

# Install + autoremove in one line
sudo apt install package && sudo apt autoremove















NANO COMMAND  ##############################3

nano file               Edit/create file in nano editor.
nano [file name in dir]  Edit file in new terminal window.
nano [new file name]     Create new file in current dir & open editor.
Ctrl+S     Save current file  
Ctrl+O     Offer to write file ("Save as")  
Ctrl+R     Insert a file into current one  
Ctrl+X     Close buffer, exit from nano  

Ctrl+K     Cut current line into cutbuffer  
Alt+6      Copy current line into cutbuffer  
Ctrl+U     Paste contents of cutbuffer  
Alt+T      Cut until end of buffer  
Ctrl+]     Complete current word  
Alt+3      Comment/uncomment line/region  
Alt+U      Undo last action  
Alt+E      Redo last undone action  

Ctrl+Q     Start backward search  
Ctrl+W     Start forward search  
Alt+Q      Find next occurrence backward  
Alt+W      Find next occurrence forward  
Alt+R      Start a replacing session  

Ctrl+H     Delete character before cursor  
Ctrl+D     Delete character under cursor  
Alt+Backspace Delete word to the left  
Ctrl+Del   Delete word to the right  
Alt+Del    Delete current line  

Ctrl+T     Execute some command  
Ctrl+J     Justify paragraph or region  
Alt+J      Justify entire buffer  
Alt+B      Run a syntax check  
Alt+F      Run a formatter/fixer/arranger  
Alt+:      Start/stop recording of macro  
Alt+;      Replay macro  

Ctrl+B     One character backward  
Ctrl+F     One character forward  
Ctrl+←     One word backward  
Ctrl+→     One word forward  
Ctrl+A     To start of line  
Ctrl+E     To end of line  
Ctrl+P     One line up  
Ctrl+N     One line down  
Ctrl+↑     To previous block  
Ctrl+↓     To next block  
Ctrl+Y     One page up  
Ctrl+V     One page down  
Alt+\      To top of buffer  
Alt+/      To end of buffer  

Alt+G      Go to specified line  
Alt+]      Go to complementary bracket  
Alt+↑      Scroll viewport up  
Alt+↓      Scroll viewport down  
Alt+<      Switch to preceding buffer  
Alt+>      Switch to succeeding buffer  

Ctrl+C     Report cursor position  
Alt+D      Report line/word/character count  
Ctrl+G     Display help text  

Alt+A      Turn the mark on/off  
Tab        Indent marked region  
Shift+Tab  Unindent marked region  
Alt+V      Enter next keystroke verbatim  
Alt+N      Turn line numbers on/off  
Alt+P      Turn visible whitespace on/off  
Alt+X      Hide or unhide the help lines  
Ctrl+L     Refresh the screen  




















### Find file and Filter Content
find path                    Find files/directories under path.
find path -name "*str*"      Find files by name (case-sensitive).
find path -iname "*str*"     Find files by name (case-insensitive).
find path -mtime -3          Files modified within last 3 days.
find path -mmin -15          Files modified within last 15 minutes.
grep str file                Find lines containing string in file.
ls path | grep 'str'         List files filtered by string.

find . -name "file.txt"               Search for "file.txt" in current directory.
find /home/user/ -iname "File.txt"    Case-insensitive search in /home/user/.
find . -name "*.txt"                  Find all .txt files.
find . -name "log*"                   Find files starting with "log".
find . -type d -name "log*"           Find directories starting with "log".
find [path] -type f                   Find all files (not directories) under path.
find [path] -mtime -7                 Files modified in last 7 days.
find . -mtime +10                    Files modified over 10 days ago.
find . -mmin -30                     Files modified in last 30 minutes.
find [path] -type f -empty            Find empty files.
find [path] -type d -empty            Find empty directories.
find [path] -name "*txt" -delete      Delete .txt files in path.

# Search by Size
find [path] -size +1G               Files larger than 1 GB.
find [path] -size +500k             Files larger than 500 KB.
find [path] -size +5M               Files larger than 5 MB.
find [path] -size -5M               Files smaller than 5 MB.
find . -type f -size -5M            Files only (not directories), under 5 MB.

# Advanced Use
find . -type f -name "*.txt" \| xargs grep "example"  
                                  Find .txt files and grep for "example" inside.




### Manage Users & Permissions

sudo chown fgarcia access.txt			Now, fgarcia owns the file access.txt.
sudo chown :security access.txt			file belongs to group security. The ':' tells Linux it's a group, not a user.
sudo chown fgarcia:security access.txt		Now fgarcia is the owner, and security is the group.
sudo chown -R fgarcia:security /home/fgarcia	Changes ownership for the whole folder and its contents.
~ + TAB TAB           List all Linux users




👤 User & Group Management

Authentication
sudo          ############### Stands for super user do 
sudo su             Switch to root user.
su [username]       Switch to another user.  [ su = stands for switch user]
exit                Return to original user.
sudo                Temporarily gain elevated access.
passwd              Change your password.

User Management
sudo useradd [user]           Add new user (root/sudo required).
sudo userdel [user]           Delete user (files remain).
sudo userdel -r [user]        Delete user and home directory.
groups [username]             List groups user belongs to.
getent group [groupname]      Show group details if exists.
last                          Recent logins
lastlog                       Last login for all users
logout                        End current session
cat /etc/group                Lists all groups and their members on the system.
cat /etc/shadow               Show content of shadow file, contains encrypted passsword & user infos.
cat /etc/passwd              Displays user account info like usernames, home directories, and shells



General ########
awk -F: '\$3 >= 1000 {print \$1}' /etc/passwd   # Display user names 
cut -d: -f1 /etc/group        Displays All groups.
users                         Shows list of active users.
whoami                        Show current user name.
cut -d: -f1 /etc/passwd       Lists all user accounts on the system.
awk -F: '$3>=1000 {print $1}' /etc/passwd  # Show only real (human) users
groups                        Shows all groups the current user belongs to.
id                            Shows user ID, group ID, and groups for the current user.
w                             Shows who is logged in and what they are doing.
who                           Shows logged-in users with time and terminal info.
uname                         Shows system info
ls /home                      Shows all users folders in the /home directory.
sudo passwd                   Set password for the current user
sudo passwd [user name]       Set password for other user
getent passwd | awk -F: '$3>=1000 && $6 ~ /^\/home/ {print $1, $6}'   # List all real users with home dirs

duf   or    df               Shows disk usage for all mounted filesystems in a nice table.
wget                         Download file, example:     wget http://example.com/file.zip
curl                         Downloads file, exame:      curl -O http://example.com/file.zip


ping --help

netstat --help               Shows active network connections, ports, and protocols.

ufw --help                   Firewall enable disable etc


free --help
free -h                     shows memory RAM USAG




top --help                  Shows real-time system processes and resource usage.
htop                        see it on prettier way 
ps -aux                     Shows all running process in details. 





Group Assignments
sudo adduser                  # Starts an interactive setup to create a user with password and details
# useradd                     # Is the default command for adding in linux
sudo useradd -g group1 Ali                Set primary group of Ali.
sudo useradd -G group2,group3 Ali         Add Ali to secondary groups.
sudo useradd -g group1 -G group2,group3 Ali  Set primary + secondary groups.
sudo useradd -g [group] [user]             Assign primary group to new user.
sudo useradd -G [group1],[group2] [user]   Add user to multiple secondary groups.
sudo useradd [user name] -m                To create home directory for the user.


sudo useradd bigboss -m -d /home/theboss -s /bin/bash
###  Add user bigboss with custom settings
-m: Create home directory
-d /home/theboss: Set custom home
-s /bin/bash: Set default shell to bash ###



Change or update an existing's  user account’s settings
usermod --help
sudo usermod -g newgroup user            Change user's primary group.
sudo usermod -a -G group user            Add user to supplemental group.
sudo usermod -a -G g1,g2 user            Add user to multiple secondary groups.
sudo usermod -d /new/home user           Change/add user's home directory.
sudo usermod -l newname oldname          Rename user login.
sudo usermod -L [user name]              Lock user account.
sudo usermod -U [user name]              Unlocks the user.
sudo usermod -G group user               Replace supplemental groups.



File Permissions & Ownership

chmod [permissions] [file]                 Set file permissions (e.g. chmod u+rwx,g+rwx,o+rwx file).
chmod o-rwx file.txt                       Remove all permissions for others.
chmod u=r,g=r,o=r file                     Set read-only for all.
chown user file                           Change file owner.
chown :group file                         Change file group.
sudo groupdel group                       Delete a group.
groups [username]                         Show groups user belongs to.
getent group [groupname]                   Show group details.




 



Basic Linux Commands

hostname                      Show machine hostname.
uname                         Show system info.
date                         Show current date.
cal                          Show calendar.
uptime                       Show system uptime, load, users.
neofetch                     Show system info with visuals.
finger [username]             Show user login info.
figlet Hello                 Display big ASCII text.
bc                           Basic calculator.



File & Directory Operations

cat file                     Show entire file content.
head file                    Show first 10 lines.
head -n 5 file               Show first 5 lines.
less file                    Scrollable file viewer.
tail file                    Show last 10 lines.
tail -n 5 file               Show last 5 lines.
echo "txt" > f.txt          Overwrite file (clear content).
echo "txt" >> f.txt         Append to file.
cat > [file]                Overwrite file and write new text.

cp src dest                 Copy file or directory.
cp new* 2/                  copy any file / dir having word new with them to dir 2 
cp [file or dir] [/directory]   Copy to new location.
mkdir name                  Create new directory.
mkdir /directory1           Creates folder in root directory / not in current directory.
mkdir FOLDER1 FOLDER2 FOLDER3    # 3 folder will be created ( u can create more ) 
mkdir -p /path/to/dir      Create directory with parents if needed.
mv src dest                Move or rename file/directory.
rm --help                  to check what all comands under rm
😳rm -rf /😳VERY DANGEROUS  Deletes everything on the system—very dangerous, can break your OS
rm file                    Delete file.
rm -r [dir]                Recursively delete directory and contents.
rm -rf [dir]               Force delete directory without prompt.
rmdir dir                  Delete empty directory.
rm f* -r                   Deletes files/folders that begin with "f" (e.g., file.txt, folder/).
rm * -r                    Deletes everything in the current directory and its subdirectories
touch file                 Create empty file.
nano file                  Edit or create file with nano editor.



Archive & Compression

zip file.zip file.txt         Compress file.
unzip file.zip                Extract archive.
zip folder.zip -r foldername/ Compress folder recursively.
unzip file.zip -d /path/to/folder Extract archive to folder.
sudo apt install zip unzip    Install zip/unzip if missing.




System Power Commands

sudo shutdown now             Shutdown immediately.
sudo shutdown +5              Shutdown after 5 minutes.
sudo shutdown 22:30           Shutdown at specified time.
sudo shutdown -r now          Restart immediately.
sudo shutdown -c              Cancel scheduled shutdown.

--------------------------------------------------------------------------------

Network Commands

ifconfig                      Show network interfaces and IPs.
ifconfig -a                   Show all interfaces including inactive.
sudo ifconfig eth0 up         Activate interface.
sudo ifconfig eth0 down       Deactivate interface.
ifconfig eth0 192.168.1.10 netmask 255.255.255.0 Assign IP and subnet.

ip addr                      Show all IP addresses and interfaces.
ping <ip/domain>             Test host connectivity.
traceroute <ip/domain>       Show packet route.
arp-scan --localnet          Scan local network devices.
netdiscover                  Discover live hosts on LAN.
nmap <ip>/24                 Scan subnet for hosts and ports.
dnsenum <domain>             Perform DNS enumeration.
searchsploit <tool/vuln>     Search Exploit-DB.
cewl <url> -w wordlist.txt   Create custom wordlist.
setoolkit                    Launch Social-Engineer Toolkit.



Reset 			Clears terminal screen and fixes display issues.
clear			to clear terminal 
Ctrl + L		Clear screen (same as ‘clear’ command)

Ctrl + A		Move to line start (cursor to beginning)
Ctrl + E		Move to line end (cursor to end)
Ctrl + B		Move backward (one character)
Ctrl + F		Move forward (one character)
Ctrl + H		Backspace (delete one character before cursor)
Ctrl + W		Delete previous word (remove word before cursor)
Ctrl + U		Erase line (from cursor to beginning)
Ctrl + K		Kill line (from cursor to end)
Ctrl + Y		Paste last cut text (from Ctrl+U/K/W)
Ctrl + T		Swap letters (swap last two before cursor)

Ctrl + C		Cancel command (stop process)
Ctrl + Z		Suspend process (pause current command)
Ctrl + D		End of input (logout/close terminal)

Ctrl + N		Next command (from history)
Ctrl + P		Previous command (from history)
Ctrl + R		Reverse search (search command history)
Ctrl + G		Cancel search (exit reverse search)

Ctrl + S		Stop output (freeze terminal output)
Ctrl + Q		Resume output (if terminal frozen)

Ctrl + X		Prefix command (Emacs-style shortcuts)
Ctrl + J		New line (acts like Enter)


Alt + .     Reuse last argument

!!          Run last command again
!$          Use last argument of previous command
!x          Run last command starting with 'x'









vim                It's the default text editor in Linux. Below are essential Vim commands:

Cursor movement (Normal/Visual Mode)
 
h j k l - Arrow keys
w / b - Next/previous word
W / B - Next/previous word (space seperated)
e / ge - Next/previous end of word
0 / $ - Start/End of line
 ^ - First non-blank character of line (same as 0w)

Editing text
 
i / a - Start insert mode at/after cursor 
I / A - Start insert mode at the beginning/end of the line
o / O - Add blank line below/above current line
Esc or Ctrl+[ - Exit insert mode
d - Delete
dd - Delete line
c - Delete, then start insert mode
cc - Delete line, then start insert mode

Operators: Operators also work in Visual Mode
 
d - Deletes from the cursor to the movement location
c - Deletes from the cursor to the movement location, then starts insert mode
y - Copy from the cursor to the movement location
> - Indent one level
< - Unindent one level
 
You can also combine operators with motions. Ex: d$ deletes from the cursor to the end of the line.
Marking text (visual mode)
 
v - Start visual mode
V - Start linewise visual mode
Ctrl+v - Start visual block mode
Esc or Ctrl+[ - Exit visual mode
Clipboard
yy - Yank (copy) a line
p - Paste after cursor
P - Paste before cursor
dd - Delete (cut) a line
x - Delete (cut) current character
X - Delete (cut) previous character
d / c - By default, these copy the deleted text
Exiting
:w - Write (save) the file, but don’t quit
:wq - Write (save) and quit
:q - Quit (fails if anything has changed)
:q! - Quit and throw away changes
Search/Replace
/pattern - Search for pattern
?pattern - Search backward for pattern
n - Repeat search in same direction
N - Repeat search in opposite direction
:%s/old/new/g - Replace all old with new throughout file (gn is better though)
:%s/old/new/gc - Replace all old with new throughout file with confirmations
General 
u - Undo
Ctrl+r - Redo

Advanced

Cursor movement 
Ctrl+d - Move down half a page
Ctrl+u - Move up half a page
} - Go forward by paragraph (the next blank line)
{ - Go backward by paragraph (the next blank line)
gg - Go to the top of the page
G - Go the bottom of the page
: [num] [enter] - Go to that line in the document
ctrl+e / ctrl+y - Scroll down/up one line

Character search
 
f [char] - Move forward to the given char 
F [char] - Move backward to the given char
t [char] - Move forward to before the given char
T [char] - Move backward to before the given char
; / , - Repeat search forwards/backwards

Editing text

J - Join line below to the current one 
r [char] - Replace a single character with the specified char (does not use Insert mode)

Visual mode
 
O - Move to other corner of block 
o - Move to other end of marked area

File Tabs
 
:e filename - Edit a file 
:tabe - Make a new tab
gt - Go to the next tab
gT - Go to the previous tab
:vsp - Vertically split windows
ctrl+ws - Split windows horizontally
ctrl+wv - Split windows vertically
ctrl+ww - Switch between windows
ctrl+wq - Quit a window

Marks: Marks allow you to jump to designated points in your code. 

m{a-z} - Set mark {a-z} at cursor position
A capital mark {A-Z} sets a global mark and will work between files
'{a-z} - Move the cursor to the start of the line where the mark was set
'' - Go back to the previous jump location

Text Objects
 
Say you have def (arg1, arg2, arg3), where your cursor is somewhere in the middle of the parenthesis. 
di( deletes everything between the parenthesis. That says “change everything inside the nearest parenthesis”. Without text objects, you would need to do T(dt).
 

General
 
. - Repeat last command 
Ctrl+r + 0 in insert mode inserts the last yanked text (or in command mode)
gv - reselect (select last selected block of text, from visual mode)
% - jumps between matching () or {}








df Command – Disk Space Usage

df                  Show disk space in 1KB blocks (basic output)  
df -h               Human-readable (KB, MB, GB, TB)  
df -T               Show filesystem type (e.g., ext4, tmpfs)  
df -Th              Human-readable + filesystem type  
df -i               Show inode usage (not disk space)  
df -ih              Human-readable inode usage  
df --total          Add summary line for totals  
df -x tmpfs         Exclude tmpfs filesystems  
df /home            Check space for a specific directory/partition  





du                 Check File/Directory Sizes
du --help or check with man du and its all component


tar                 A Linux tool for archiving (.tar) and compressing files.
tar --help


zip    also check zip --help    Compress Files/Directories








File handling

Ctrl+S Save current file
Ctrl+O Offer to write file ("Save as")
Ctrl+R Insert a file into current one
Ctrl+X Close buffer, exit from nano

Editing

Ctrl+K Cut current line into cutbuffer
Alt+6 Copy current line into cutbuffer
Ctrl+U Paste contents of cutbuffer
Alt+T Cut until end of buffer
Ctrl+] Complete current word
Alt+3 Comment/uncomment line/region
Alt+U Undo last action
Alt+E Redo last undone action


Search and replace

Ctrl+Q Start backward search
Ctrl+W Start forward search
Alt+Q Find next occurrence backward
Alt+W Find next occurrence forward
Alt+R Start a replacing session

Deletion

Ctrl+H Delete character before cursor      
Ctrl+D Delete character under cursor
Alt+Bsp Delete word to the left
Ctrl+Del Delete word to the right
Alt+Del Delete current line

Operations

Ctrl+T Execute some command
Ctrl+J Justify paragraph or region
Alt+J Justify entire buffer
Alt+B Run a syntax check
Alt+F Run a formatter/fixer/arranger
Alt+: Start/stop recording of macro
Alt+; Replay macro


Moving around

Ctrl+B One character backward
Ctrl+F One character forward
Ctrl+← One word backward
Ctrl+→ One word forward
Ctrl+A To start of line
Ctrl+E To end of line
Ctrl+P One line up
Ctrl+N One line down
Ctrl+↑ To previous block
Ctrl+↓ To next block
Ctrl+Y One page up
Ctrl+V One page down
Alt+\ To top of buffer
Alt+/ To end of buffer


Special movement

Alt+G Go to specified line
Alt+] Go to complementary bracket
Alt+↑ Scroll viewport up
Alt+↓ Scroll viewport down
Alt+< Switch to preceding buffer
Alt+> Switch to succeeding buffer


Information

Ctrl+C Report cursor position
Alt+D Report line/word/character count
Ctrl+G Display help text

Various

Alt+A Turn the mark on/off TabIndent marked region
Shift+Tab   Unindent marked region
Alt+V Enter next keystroke verbatim
Alt+N Turn line numbers on/off
Alt+P Turn visible whitespace on/off
Alt+X Hide or unhide the help lines
Ctrl+L Refresh the screen














###   EXTRA

sudo apt update- update the list of packages from repositories (preparing an update or installing software)

sudo apt upgrade -y- perform a software update

sudo apt-get install htop- install the htop utility

sudo apt-get remove htop- remove htop utility

sudo apt-get purge htop- remove the htop utility along with its settings

apt moo- cow superpower

aptitude moo -vvvvv- cow superpower 2

sudo apt install cowsay- cow superpower 3



dpkg -l- display a list of installed packages

dpkg -l | wc -l- display the number of installed packages

dpkg –l tree- display info about the tree package

apt show tree- display info about the tree package

apt download htop- download the package as a *.deb file

sudo dpkg -i htop_3.0-11_amd64.deb- install the package using the dpkg utility

sudo apt install snapd- install snap package manager

apt search opera- search for opera package in apt repositories

snap find opera- search for the opera package in the snap repositories

snap list- list packages installed by snap manager

sudo snap install opera- install opera package

sudo snap remove opera- remove opera package



# download VirtualBox deb package from the official website

wget https://download.virtualbox.org/virtualbox/7.1.4/virtualbox-7.1_7.1.4-165100~Ubuntu~jammy_amd64.deb



ls

# install deb package from downloaded file

sudo dpkg -i virtualbox-7.1_7.1.4-165100~Ubuntu~jammy_amd64.deb

# remove VirtualBox package

sudo dpkg -r virtualbox-7.1



# working with the /etc/apt directory

ls /etc/apt

cd /etc/apt

ll



# output the specified file to the screen

cat sources.list

# create a new file to specify the VirtualBox repository

sudo nano sources.list.d/vbox.list

# view catalog

ls sources.list.d

tree



# output the created file to the screen

cat sources.list.d/vbox.list

# download and install the VirtualBox repository key

wget -O- https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo gpg --yes --output /usr/share/keyrings/oracle-virtualbox-2016.gpg --dearmor

# refresh repository lists (important after adding a new repo)

sudo apt update

# install VirtualBox package from repository

sudo apt install virtualbox



# call VirtualBox help (to confirm successful installation)

whatis virtualbox

virtualbox --help



# output distribution code name

lsb_release -a



# call full help for add-apt-repository command

man add-apt-repository

# install additional package for add-apt-repository utility

sudo apt install software-properties-common












